# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  backend-tests:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.4.0
      - image: circleci/redis
      - image: circleci/postgres
        environment:
          POSTGRES_USER: handler
          POSTGRES_DB: sampledb
          POSTGRES_PASSWORD: password

    working_directory: ~/repo/backend

    steps:
      - checkout:
          path: ~/repo
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for PostgreSQL DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for Redis DB
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Install dependencies with clean slate
          command: npm ci
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Run tests with coverage
          command: npm run coverage
      - run:
          name: Upload coverage results
          command: npm run coverage:upload
      - run:
          name: Assert that coverage results meet thresholds
          command: npm run coverage:check
  
  frontend-tests:
    docker:
      - image: cypress/base:12.6.0
        environment:
          VANITY_URI: http://localhost:3000

    working_directory: ~/repo/frontend

    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Install dependencies with clean slate
          command: npm ci
      - run:
          name: Run tests
          command: npm test

workflows:
  backend-build:
    jobs:
      - backend-tests
  frontend-build:
    jobs:
      - frontend-tests
